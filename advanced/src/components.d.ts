/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CssSideDrawer {
        /**
          * Title from SideDrawer
          * @type {string}
         */
        "myTitle": string;
        "open": () => Promise<void>;
        /**
          * Open SideDrawer
          * @type {boolean}
         */
        "opened": boolean;
    }
    interface CssStockPrice {
        "stockSymbol": string;
    }
    interface CustomTooltip {
        "text": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface StockFinder {
    }
}
declare global {
    interface HTMLCssSideDrawerElement extends Components.CssSideDrawer, HTMLStencilElement {
    }
    var HTMLCssSideDrawerElement: {
        prototype: HTMLCssSideDrawerElement;
        new (): HTMLCssSideDrawerElement;
    };
    interface HTMLCssStockPriceElement extends Components.CssStockPrice, HTMLStencilElement {
    }
    var HTMLCssStockPriceElement: {
        prototype: HTMLCssStockPriceElement;
        new (): HTMLCssStockPriceElement;
    };
    interface HTMLCustomTooltipElement extends Components.CustomTooltip, HTMLStencilElement {
    }
    var HTMLCustomTooltipElement: {
        prototype: HTMLCustomTooltipElement;
        new (): HTMLCustomTooltipElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLStockFinderElement extends Components.StockFinder, HTMLStencilElement {
    }
    var HTMLStockFinderElement: {
        prototype: HTMLStockFinderElement;
        new (): HTMLStockFinderElement;
    };
    interface HTMLElementTagNameMap {
        "css-side-drawer": HTMLCssSideDrawerElement;
        "css-stock-price": HTMLCssStockPriceElement;
        "custom-tooltip": HTMLCustomTooltipElement;
        "my-component": HTMLMyComponentElement;
        "stock-finder": HTMLStockFinderElement;
    }
}
declare namespace LocalJSX {
    interface CssSideDrawer {
        /**
          * Title from SideDrawer
          * @type {string}
         */
        "myTitle"?: string;
        /**
          * Open SideDrawer
          * @type {boolean}
         */
        "opened"?: boolean;
    }
    interface CssStockPrice {
        "stockSymbol"?: string;
    }
    interface CustomTooltip {
        "text"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface StockFinder {
    }
    interface IntrinsicElements {
        "css-side-drawer": CssSideDrawer;
        "css-stock-price": CssStockPrice;
        "custom-tooltip": CustomTooltip;
        "my-component": MyComponent;
        "stock-finder": StockFinder;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "css-side-drawer": LocalJSX.CssSideDrawer & JSXBase.HTMLAttributes<HTMLCssSideDrawerElement>;
            "css-stock-price": LocalJSX.CssStockPrice & JSXBase.HTMLAttributes<HTMLCssStockPriceElement>;
            "custom-tooltip": LocalJSX.CustomTooltip & JSXBase.HTMLAttributes<HTMLCustomTooltipElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "stock-finder": LocalJSX.StockFinder & JSXBase.HTMLAttributes<HTMLStockFinderElement>;
        }
    }
}
